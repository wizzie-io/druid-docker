preconfiguration: &preconfiguration
  working_directory: /druid-docker
  docker:
    - image: google/cloud-sdk:latest
  environment: 
    - APP_NAME: "druid-docker"

image: &cached
    paths:
      - druid-docker.tar
workspace: &workspace
    at: /druid-docker/caches


version: 2
jobs:
  build:
    <<: *preconfiguration
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build -t ${APP_NAME} .
            mkdir -p caches
            docker save -o caches/${APP_NAME}.tar ${APP_NAME}
      - persist_to_workspace:
          root: caches
          <<: *cached
  deploy:
    <<: *preconfiguration
    steps:
      - attach_workspace:
          <<: *workspace
      - setup_remote_docker
      - deploy:
          name: Tag master and deploy
          command: |
            set +o pipefail
            docker load -i /${APP_NAME}/caches/${APP_NAME}.tar | true
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud config set project $GCLOUD_PROJECT
            docker tag ${APP_NAME}:latest gcr.io/${GCLOUD_PROJECT}/${APP_NAME}:latest
            gcloud docker -- push gcr.io/${GCLOUD_PROJECT}/${APP_NAME}:latest
  tagged-deploy:
    <<: *preconfiguration
    steps:
      - attach_workspace:
          <<: *workspace
      - setup_remote_docker
      - deploy:
          name: Tag with latest and git tag and deploy both
          command: |
            set +o pipefail
            docker load -i /${APP_NAME}/caches/${APP_NAME}.tar | true
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud config set project $GCLOUD_PROJECT
            docker tag ${APP_NAME}:latest gcr.io/${GCLOUD_PROJECT}/${APP_NAME}:stable
            gcloud docker -- push gcr.io/${GCLOUD_PROJECT}/${APP_NAME}:stable
            gcloud container images add-tag gcr.io/${GCLOUD_PROJECT}/${APP_NAME}:stable gcr.io/${GCLOUD_PROJECT}/${APP_NAME}:${CIRCLE_TAG}
workflows:
  version: 2
  build-n-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
      - tagged-deploy:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
