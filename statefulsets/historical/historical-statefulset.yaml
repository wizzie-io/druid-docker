apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: historical
spec:
  serviceName: historical-svc
  replicas: 1 
  template:
    metadata:
      labels:
        app: historical
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        scheduler.alpha.kubernetes.io/affinity: >
            {
              "podAntiAffinity": {
                "requiredDuringSchedulingRequiredDuringExecution": [{
                  "labelSelector": {
                    "matchExpressions": [{
                      "key": "app",
                      "operator": "In",
                      "values": ["historical-svc"]
                    }]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }]
              }
            }
    spec:
      containers:
      - name: k8shistorical
        imagePullPolicy: Always
        image: gcr.io/mi-proyecto-155915/druid-historical:latest
        resources:
          requests:
            memory: "1Gi"
            cpu: "1"
        ports:
        - containerPort: 8083
        env:
        - name : ZOOKEEPER_SERVER
          valueFrom:
            configMapKeyRef:
                name: historical-config
                key: zookeeper_server
        - name : PSQL_SERVER
          valueFrom:
            configMapKeyRef:
                name: historical-config
                key: psql_server
        - name : PSQL_USER
          valueFrom:
            configMapKeyRef:
                name: historical-config
                key: psql_user
        - name : PSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
                name: historical-config
                key: psql_password
        - name : MEMCACHED_SERVER
          valueFrom:
            configMapKeyRef:
                name: historical-config
                key: memcached_server
        - name: DRUID_HOST
          valueFrom:
            fieldRef:
                fieldPath: status.podIP
        - name: S3_BUCKET
          valueFrom:
            configMapKeyRef:
                name: historical-config
                key: s3_bucket
        - name: S3_ACCESS_KEY
          valueFrom:
            configMapKeyRef:
                name: historical-config
                key: s3_access_key
        - name: S3_SECRET_KEY
          valueFrom:
            configMapKeyRef:
                name: historical-config
                key: s3_secret_key
        command:
        - druid-start.sh
        readinessProbe:
          exec:
            command:
            - sh
            - -c 
            - /usr/bin/historicalOk.sh
          initialDelaySeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - bash
            - -c
            - /usr/bin/historicalOk.sh
          initialDelaySeconds: 15
          timeoutSeconds: 5
        volumeMounts:
        - name: datadir
          mountPath: /tmp
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
